buildscript {
    repositories {
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
}
plugins {
    id 'java'
    id 'de.fuerstenau.buildconfig' version '1.1.8'
}

def versionMajor = 4
def versionMinor = 2
def versionPatch = 0

def mainClassSimpleName = 'TouchPortalPluginExample'
def mainClassPackage = 'com.github.ChristopheCVB.TouchPortal.sample'
group mainClassPackage
version "${versionMajor}.${versionMinor}.${versionPatch}"

buildConfig {
    appName = project.name
    version = project.version

    clsName = 'BuildConfig'
    packageName = project.group

    buildConfigField 'int', 'VERSION_CODE', (versionMajor * 1000 + versionMinor * 100 + versionPatch) + ''
}

dependencies {
    compile project(':Library')
    compile project(':Annotations')
    compile project(':Helpers')

    annotationProcessor project(':AnnotationsProcessor')

    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

compileJava {
    options.compilerArgs.add('-parameters')
}

jar {
    manifest {
        attributes 'Implementation-Title': "${mainClassSimpleName}",
                'Implementation-Version': "${project.version}",
                'Main-Class': "${mainClassPackage}.${mainClassSimpleName}"
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

task copyResources(type: Copy) {
    from(file("$buildDir/resources/main/"))
    into("$buildDir/plugin/${mainClassSimpleName}/")

    doLast {
        println 'Resources Copied into plugin directory'
    }
}

task copyJar(type: Copy) {
    dependsOn jar
    from(file("$buildDir/libs/"))
    into("$buildDir/plugin/${mainClassSimpleName}/")
    rename {
        "${mainClassSimpleName}.jar"
    }

    doLast {
        println 'Jar Copied into plugin directory'
    }
}

task copyGeneratedResources(type: Copy) {
    dependsOn copyJar
    from(file("$buildDir/generated/sources/annotationProcessor/java/main/resources/"))
    into("$buildDir/plugin/${mainClassSimpleName}/")

    doLast {
        println 'Generated Resources Copied into plugin directory'
    }
}

task packagePlugin(type: Zip) {
    dependsOn copyResources, copyGeneratedResources, copyJar
    group 'Touch Portal - Plugin'
    description 'Package the Project into a TPP'

    archiveFileName = "${mainClassSimpleName}.tpp"
    destinationDirectory = file("$buildDir/plugin")
    from "$buildDir/plugin/"
    exclude "*.tpp"
    includeEmptyDirs = false

    doLast {
        println 'Plugin Packaged'
    }
}
